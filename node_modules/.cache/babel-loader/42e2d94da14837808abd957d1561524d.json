{"ast":null,"code":"var _jsxFileName = \"/Users/madisonmccardle/PCA/javascipt/react/hacker-news-react-apollo/src/components/CreateLink.js\";\nimport React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { FEED_QUERY } from './LinkList';\n\nclass CreateLink extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      description: '',\n      url: ''\n    };\n  }\n\n  render() {\n    const POST_MUTATION = gql`\n      mutation PostMutation($description: String!, $url: String!) {\n        post(description: $description, url: $url) {\n          id\n          createdAt\n          url\n          description\n        }\n      }\n    `; // create the JavaScript constant called POST_MUTATION that stores the mutation.\n\n    const {\n      description,\n      url\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-column mt3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"mb2\",\n      value: description,\n      onChange: e => this.setState({\n        description: e.target.value\n      }),\n      type: \"text\",\n      placeholder: \"A description for the link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"mb2\",\n      value: url,\n      onChange: e => this.setState({\n        url: e.target.value\n      }),\n      type: \"text\",\n      placeholder: \"The URL for the link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Mutation, {\n      mutation: POST_MUTATION,\n      variables: {\n        description,\n        url\n      },\n      onCompleted: () => this.props.history.push('/'),\n      update: (store, {\n        data: {\n          post\n        }\n      }) => {\n        const data = store.readQuery({\n          query: FEED_QUERY\n        });\n        data.feed.links.unshift(post);\n        store.writeQuery({\n          query: FEED_QUERY,\n          data\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, postMutation => /*#__PURE__*/React.createElement(\"button\", {\n      onClick: postMutation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 26\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nexport default CreateLink;","map":{"version":3,"sources":["/Users/madisonmccardle/PCA/javascipt/react/hacker-news-react-apollo/src/components/CreateLink.js"],"names":["React","Component","Mutation","gql","FEED_QUERY","CreateLink","state","description","url","render","POST_MUTATION","e","setState","target","value","props","history","push","store","data","post","readQuery","query","feed","links","unshift","writeQuery","postMutation"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,SAASC,UAAT,QAA2B,YAA3B;;AAGA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCK,KADiC,GACzB;AACNC,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,GAAG,EAAE;AAFC,KADyB;AAAA;;AAMjCC,EAAAA,MAAM,GAAG;AACP,UAAMC,aAAa,GAAGP,GAAI;;;;;;;;;KAA1B,CADO,CAWP;;AAEA,UAAM;AAAEI,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAuB,KAAKF,KAAlC;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,KADZ;AAEE,MAAA,KAAK,EAAEC,WAFT;AAGE,MAAA,QAAQ,EAAEI,CAAC,IAAI,KAAKC,QAAL,CAAc;AAAEL,QAAAA,WAAW,EAAEI,CAAC,CAACE,MAAF,CAASC;AAAxB,OAAd,CAHjB;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,WAAW,EAAC,4BALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE;AACE,MAAA,SAAS,EAAC,KADZ;AAEE,MAAA,KAAK,EAAEN,GAFT;AAGE,MAAA,QAAQ,EAAEG,CAAC,IAAI,KAAKC,QAAL,CAAc;AAAEJ,QAAAA,GAAG,EAAEG,CAAC,CAACE,MAAF,CAASC;AAAhB,OAAd,CAHjB;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,WAAW,EAAC,sBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF,eAkBA,oBAAC,QAAD;AACE,MAAA,QAAQ,EAAEJ,aADZ;AAEE,MAAA,SAAS,EAAE;AAAEH,QAAAA,WAAF;AAAeC,QAAAA;AAAf,OAFb;AAGE,MAAA,WAAW,EAAE,MAAM,KAAKO,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB,CAHrB;AAIE,MAAA,MAAM,EAAE,CAACC,KAAD,EAAQ;AAAEC,QAAAA,IAAI,EAAE;AAAEC,UAAAA;AAAF;AAAR,OAAR,KAA+B;AACrC,cAAMD,IAAI,GAAGD,KAAK,CAACG,SAAN,CAAgB;AAAEC,UAAAA,KAAK,EAAElB;AAAT,SAAhB,CAAb;AACAe,QAAAA,IAAI,CAACI,IAAL,CAAUC,KAAV,CAAgBC,OAAhB,CAAwBL,IAAxB;AACAF,QAAAA,KAAK,CAACQ,UAAN,CAAiB;AACfJ,UAAAA,KAAK,EAAElB,UADQ;AAEfe,UAAAA;AAFe,SAAjB;AAID,OAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcGQ,YAAY,iBAAI;AAAQ,MAAA,OAAO,EAAEA,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdnB,CAlBA,CADF;AAqCD;;AAzDgC;;AA4DnC,eAAetB,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\n\nimport { FEED_QUERY } from './LinkList'\n\n\nclass CreateLink extends Component {\n  state = {\n    description: '',\n    url: '',\n  }\n\n  render() {\n    const POST_MUTATION = gql`\n      mutation PostMutation($description: String!, $url: String!) {\n        post(description: $description, url: $url) {\n          id\n          createdAt\n          url\n          description\n        }\n      }\n    `\n    // create the JavaScript constant called POST_MUTATION that stores the mutation.\n\n    const { description, url } = this.state\n    return (\n      <div>\n        <div className=\"flex flex-column mt3\">\n          <input\n            className=\"mb2\"\n            value={description}\n            onChange={e => this.setState({ description: e.target.value })}\n            type=\"text\"\n            placeholder=\"A description for the link\"\n          />\n          <input\n            className=\"mb2\"\n            value={url}\n            onChange={e => this.setState({ url: e.target.value })}\n            type=\"text\"\n            placeholder=\"The URL for the link\"\n          />\n        </div>\n        {/* pass description and url states as variables prop. */}\n      <Mutation\n        mutation={POST_MUTATION}\n        variables={{ description, url }}\n        onCompleted={() => this.props.history.push('/')}\n        update={(store, { data: { post } }) => {\n          const data = store.readQuery({ query: FEED_QUERY })\n          data.feed.links.unshift(post)\n          store.writeQuery({\n            query: FEED_QUERY,\n            data\n          })\n        }}\n        >\n        {/* After the mutation was performed, react-router-dom will now navigate back to the LinkList component thatâ€™s accessible on the root route: /. */}\n        {postMutation => <button onClick={postMutation}>Submit</button>}\n      </Mutation>\n      </div>\n    )\n  }\n}\n\nexport default CreateLink"]},"metadata":{},"sourceType":"module"}