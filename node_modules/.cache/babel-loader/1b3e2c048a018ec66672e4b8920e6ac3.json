{"ast":null,"code":"var _jsxFileName = \"/Users/madisonmccardle/PCA/javascipt/react/hacker-news-react-apollo/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport { AUTH_TOKEN } from '../constants';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      login: true,\n      // switch between Login and SignUp\n      email: '',\n      password: '',\n      name: ''\n    };\n\n    this._confirm = async data => {\n      // ... you'll implement this ðŸ”œ\n      const {\n        token\n      } = this.state.login ? data.login : data.signup;\n\n      this._saveUserData(token);\n\n      this.props.history.push(`/`);\n    };\n\n    this._saveUserData = token => {\n      localStorage.setItem(AUTH_TOKEN, token);\n    };\n  }\n\n  render() {\n    const SIGNUP_MUTATION = gql`\n      mutation SignupMutation($email: String!, $password: String!, $name: String!) {\n        signup(email: $email, password: $password, name: $name) {\n          token\n        }\n      }\n    `;\n    const LOGIN_MUTATION = gql`\n      mutation LoginMutation($email: String!, $password: String!) {\n        login(email: $email, password: $password) {\n          token\n        }\n      }\n    `;\n    const {\n      login,\n      email,\n      password,\n      name\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"mv3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, login ? 'Login' : 'Sign Up'), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, !login && /*#__PURE__*/React.createElement(\"input\", {\n      value: name,\n      onChange: e => this.setState({\n        name: e.target.value\n      }),\n      type: \"text\",\n      placeholder: \"Your name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      value: email,\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      type: \"text\",\n      placeholder: \"Your email address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      value: password,\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      type: \"password\",\n      placeholder: \"Choose a safe password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex mt3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Mutation, {\n      mutation: login ? LOGIN_MUTATION : SIGNUP_MUTATION,\n      variables: {\n        email,\n        password,\n        name\n      },\n      onCompleted: data => this._confirm(data),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, mutation => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pointer mr2 button\",\n      onClick: mutation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, login ? 'login' : 'create account')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pointer button\",\n      onClick: () => this.setState({\n        login: !login\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, login ? 'need to create an account?' : 'already have an account?')));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/madisonmccardle/PCA/javascipt/react/hacker-news-react-apollo/src/components/Login.js"],"names":["React","Component","AUTH_TOKEN","Mutation","gql","Login","state","login","email","password","name","_confirm","data","token","signup","_saveUserData","props","history","push","localStorage","setItem","render","SIGNUP_MUTATION","LOGIN_MUTATION","e","setState","target","value","mutation"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { AUTH_TOKEN } from '../constants'\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\n\nclass Login extends Component {\n  state = {\n    login: true, // switch between Login and SignUp\n    email: '',\n    password: '',\n    name: '',\n  }\n\n  render() {\n    const SIGNUP_MUTATION = gql`\n      mutation SignupMutation($email: String!, $password: String!, $name: String!) {\n        signup(email: $email, password: $password, name: $name) {\n          token\n        }\n      }\n    `\n\n    const LOGIN_MUTATION = gql`\n      mutation LoginMutation($email: String!, $password: String!) {\n        login(email: $email, password: $password) {\n          token\n        }\n      }\n    `\n\n    const { login, email, password, name } = this.state\n    return (\n      <div>\n        <h4 className=\"mv3\">{login ? 'Login' : 'Sign Up'}</h4>\n        <div className=\"flex flex-column\">\n        {/* The second state is for users that havenâ€™t created an account yet, and thus still need to sign up.\n        Here, you also render a third input field where users can provide their name.\n        In this case, state.login will be false. */}\n          {!login && (\n            <input\n              value={name}\n              onChange={e => this.setState({ name: e.target.value })}\n              type=\"text\"\n              placeholder=\"Your name\"\n            />\n          )}\n          {/* One state is for users that already have an account and only need to login.\n          In this state, the component will only render two input fields for the user to provide their email and password.\n          Notice that state.login will be true in this case. */}\n          <input\n            value={email}\n            onChange={e => this.setState({ email: e.target.value })}\n            type=\"text\"\n            placeholder=\"Your email address\"\n          />\n          <input\n            value={password}\n            onChange={e => this.setState({ password: e.target.value })}\n            type=\"password\"\n            placeholder=\"Choose a safe password\"\n          />\n        </div>\n        <div className=\"flex mt3\">\n          <Mutation\n            mutation={login ? LOGIN_MUTATION : SIGNUP_MUTATION}\n            variables={{ email, password, name }}\n            onCompleted={data => this._confirm(data)}\n          >\n            {mutation => (\n              <div className=\"pointer mr2 button\" onClick={mutation}>\n                {login ? 'login' : 'create account'}\n              </div>\n            )}\n          </Mutation>\n          {/* If the user wants to just login, youâ€™re calling the loginMutation, otherwise youâ€™re using the signupMutation, and the mutation will be triggered on the divâ€™s onClick event.\n          GraphQL mutations receive the email, password and name state values as params passed on the variables prop.\n          Lastly, after the mutation has finished, we call the _confirm function, passing the data returned by the mutation as an argument. */}\n          <div\n            className=\"pointer button\"\n            onClick={() => this.setState({ login: !login })}\n          >\n            {login\n              ? 'need to create an account?'\n              : 'already have an account?'}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  _confirm = async (data) => {\n    // ... you'll implement this ðŸ”œ\n    const { token } = this.state.login ? data.login : data.signup\n    this._saveUserData(token)\n    this.props.history.push(`/`)\n  }\n\n  _saveUserData = token => {\n    localStorage.setItem(AUTH_TOKEN, token)\n  }\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}